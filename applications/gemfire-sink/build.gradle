import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
}

group = 'com.vmware.data.solutions'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://repo.spring.io/milestone' }
    maven {
        url "https://commercial-repo.pivotal.io/data3/gemfire-release-repo/gemfire"
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
        credentials {
            username System.getenv("HARBOR_USER")
            password System.getenv("HARBOR_PASSWORD")
        }
    }
}

ext {
    set('springCloudVersion', "2022.0.2")
    set('wavefrontVersion', "2.3.4")
    gemFireVersion = '9.15.4'
}

dependencies {
//    implementation "com.vmware.gemfire:spring-data-2.7-gemfire-9.15:1.1.0"
    implementation 'io.pivotal.services.dataTx:gemfire-extensions-core:1.2.0'


    implementation group: 'com.vmware.gemfire', name: 'geode-core', version: gemFireVersion
    implementation group: 'com.vmware.gemfire', name: 'geode-common', version: gemFireVersion
    implementation group: 'com.vmware.gemfire', name: 'geode-lucene', version: gemFireVersion
    implementation group: 'com.vmware.gemfire', name: 'geode-cq', version: gemFireVersion
    implementation group: 'com.vmware.gemfire', name: 'geode-wan', version: gemFireVersion

    implementation project(':components:gemfire-extensions-core')


//    implementation "com.vmware.gemfire:geode-core:9.15.4"
//    implementation "com.vmware.gemfire:geode-cq:9.15.4"

    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
    implementation 'org.springframework.amqp:spring-rabbit-stream'
    implementation 'com.rabbitmq:stream-client:0.9.0'

//    runtimeOnly 'com.wavefront:wavefront-spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

dependencyManagement {
    imports {
        mavenBom "com.wavefront:wavefront-spring-boot-bom:${wavefrontVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}